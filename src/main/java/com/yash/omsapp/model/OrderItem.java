package com.yash.omsapp.model;

import javax.persistence.*;
import java.math.BigDecimal;


/**
 * Represents an individual item within a customer's order.
 * Each OrderItem links a product to an order and stores quantity and price at purchase time.
 */
@Entity
@Table(name = "order_items")
public class OrderItem {
	
	 /**
     * Unique identifier for the order item.
     * Auto-generated by the database.
     */
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;

	
	/**
     * The order to which this item belongs.
     * Mapped as a many-to-one relationship with lazy loading.
     */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "order_id", nullable = false)
	private Order order;

	
	/**
     * The product associated with this order item.
     * Mapped as a many-to-one relationship with lazy loading.
     */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "product_id", nullable = false)
	private Product product;

	/**
     * Quantity of the product ordered.
     * Must be a non-null integer.
     */
	@Column(nullable = false)
	private Integer quantity;

	
	/**
     * Price per unit of the product at the time of purchase.
     * Precision: 12 digits, Scale: 2 decimal places.
     */
	@Column(nullable = false, precision = 12, scale = 2)
	private BigDecimal price; // price per unit at purchase time

	// getters/setters
	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public Order getOrder() {
		return order;
	}

	public void setOrder(Order order) {
		this.order = order;
	}

	public Product getProduct() {
		return product;
	}

	public void setProduct(Product product) {
		this.product = product;
	}

	public Integer getQuantity() {
		return quantity;
	}

	public void setQuantity(Integer quantity) {
		this.quantity = quantity;
	}

	public BigDecimal getPrice() {
		return price;
	}

	public void setPrice(BigDecimal price) {
		this.price = price;
	}
}
